#
# Exercice RBAC
#
---
apiVersion: v1
kind: Namespace
metadata:
  name: rbac
  labels:
    name: rbac
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rbac-reader
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: cka-user
  namespace: rbac

#
# Replicas
#
---
apiVersion: v1
kind: Namespace
metadata:
  name: replicas
  labels:
    name: replicas
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: replicas
spec:
  replicas: 5
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: Namespace
metadata:
  name: service
  labels:
    name: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Namespace
metadata:
  name: network-policy-a
  labels:
    name: network-policy-a
---
apiVersion: v1
kind: Namespace
metadata:
  name: network-policy-b
  labels:
    name: network-policy-b
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-a
  namespace: network-policy-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-a
  template:
    metadata:
      labels:
        app: app-a
    spec:
      containers:
      - name: app-a
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-b
  namespace: network-policy-b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appb
  template:
    metadata:
      labels:
        app: appb
    spec:
      containers:
      - name: appb
        image: nginx
        ports:
        - containerPort: 80
---
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: network-policy-b
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: network-policy-a
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress